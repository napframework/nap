apply plugin: 'com.android.application'

// Find NAP, using framework version from gradle.properties
// TODO Later, devise a more Gradle-y way to do this logic sharing
apply from: 'find_nap.gradle'

// Bring in common Gradle methods
apply from: project.ext.get('NAP_ROOT') + '/gradle/nap_shared.gradle'
logger.quiet('Using NAP framework v' + napVersion + ' for project \'' + napProjectName + '\'')

// Process project NAP module dependencies from project.json and module.json files
processNapDependencies(napProjectName)

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId = 'nl.naivi.emography'
        minSdkVersion 16
        targetSdkVersion 28
        versionCode = 1
        versionName = '1.0'
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions -std=c++14"
                arguments '-DANDROID_STL=c++_static',
                          '-DNAP_ROOT=' + file(project.ext.get('NAP_ROOT')).absolutePath,
                          '-DNAP_PROJECT_NAME=' + napProjectName,
                          '-DNAP_MODULES=' + project.ext.get('NAP_MODULES').join(';'),
                          '-DNAP_PROJECTMODULE_MODULES=' + project.ext.get('NAP_PROJECTMODULE_MODULES').join(';')
            }
        }
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
//            abiFilters 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                          'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
        }
        // Add shared directory directories for NAP modules etc
        release {
            jniLibs.srcDirs = getSharedLibSourceDirs(napProjectName, 'Release')
        }
        debug {
            jniLibs.srcDirs = getSharedLibSourceDirs(napProjectName, 'Debug')
        }
    }
    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
}

dependencies {
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
}
