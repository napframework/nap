/*********************************************************************
 *
 * $Id: yjni.h 21719 2015-10-09 14:44:06Z seb $
 *
 * Declaration of public entry points to the low-level API
 *
 * - - - - - - - - - License information: - - - - - - - - -
 *
 *  Copyright (C) 2011 and beyond by Yoctopuce Sarl, Switzerland.
 *
 *  Yoctopuce Sarl (hereafter Licensor) grants to you a perpetual
 *  non-exclusive license to use, modify, copy and integrate this
 *  file into your software for the sole purpose of interfacing
 *  with Yoctopuce products.
 *
 *  You may reproduce and distribute copies of this file in
 *  source or object form, as long as the sole purpose of this
 *  code is to interface with Yoctopuce products. You must retain
 *  this notice in the distributed source file.
 *
 *  You should refer to Yoctopuce General Terms and Conditions
 *  for additional information regarding your rights and
 *  obligations.
 *
 *  THE SOFTWARE AND DOCUMENTATION ARE PROVIDED "AS IS" WITHOUT
 *  WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING
 *  WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, FITNESS
 *  FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO
 *  EVENT SHALL LICENSOR BE LIABLE FOR ANY INCIDENTAL, SPECIAL,
 *  INDIRECT OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA,
 *  COST OF PROCUREMENT OF SUBSTITUTE GOODS, TECHNOLOGY OR
 *  SERVICES, ANY CLAIMS BY THIRD PARTIES (INCLUDING BUT NOT
 *  LIMITED TO ANY DEFENSE THEREOF), ANY CLAIMS FOR INDEMNITY OR
 *  CONTRIBUTION, OR OTHER SIMILAR COSTS, WHETHER ASSERTED ON THE
 *  BASIS OF CONTRACT, TORT (INCLUDING NEGLIGENCE), BREACH OF
 *  WARRANTY, OR OTHERWISE.
 *
 *********************************************************************/
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_yoctopuce_YoctoAPI_YJniWrapper */

#ifndef _Included_com_yoctopuce_YoctoAPI_YJniWrapper
#define _Included_com_yoctopuce_YoctoAPI_YJniWrapper
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_yoctopuce_YoctoAPI_YJniWrapper
 * Method:    getAPIVersion
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_yoctopuce_YoctoAPI_YJniWrapper_getAPIVersion
  (JNIEnv *, jclass);

/*
 * Class:     com_yoctopuce_YoctoAPI_YJniWrapper
 * Method:    reserveUSBAccess
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_yoctopuce_YoctoAPI_YJniWrapper_reserveUSBAccess
  (JNIEnv *, jclass);

/*
 * Class:     com_yoctopuce_YoctoAPI_YJniWrapper
 * Method:    releaseUSBAccess
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_yoctopuce_YoctoAPI_YJniWrapper_releaseUSBAccess
  (JNIEnv *, jclass);

/*
 * Class:     com_yoctopuce_YoctoAPI_YJniWrapper
 * Method:    getBootloaders
 * Signature: ()Ljava/util/ArrayList;
 */
JNIEXPORT jobject JNICALL Java_com_yoctopuce_YoctoAPI_YJniWrapper_getBootloaders
  (JNIEnv *, jclass);

/*
 * Class:     com_yoctopuce_YoctoAPI_YJniWrapper
 * Method:    updateDeviceList
 * Signature: (Ljava/util/ArrayList;Ljava/util/ArrayList;)V
 */
JNIEXPORT void JNICALL Java_com_yoctopuce_YoctoAPI_YJniWrapper_updateDeviceList
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     com_yoctopuce_YoctoAPI_YJniWrapper
 * Method:    devRequestSync
 * Signature: (Ljava/lang/String;[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_yoctopuce_YoctoAPI_YJniWrapper_devRequestSync
  (JNIEnv *, jclass, jstring, jbyteArray);

/*
 * Class:     com_yoctopuce_YoctoAPI_YJniWrapper
 * Method:    devRequestAsync
 * Signature: (Ljava/lang/String;[BLcom/yoctopuce/YoctoAPI/YGenericHub/RequestAsyncResult;Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_com_yoctopuce_YoctoAPI_YJniWrapper_devRequestAsync
  (JNIEnv *, jclass, jstring, jbyteArray, jobject, jobject);

/*
 * Class:     com_yoctopuce_YoctoAPI_YJniWrapper
 * Method:    startNotifications
 * Signature: (Lcom/yoctopuce/YoctoAPI/YUSBHub;)V
 */
JNIEXPORT void JNICALL Java_com_yoctopuce_YoctoAPI_YJniWrapper_startNotifications
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_yoctopuce_YoctoAPI_YJniWrapper
 * Method:    stopNotifications
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_yoctopuce_YoctoAPI_YJniWrapper_stopNotifications
  (JNIEnv *, jclass);

/*
 * Class:     com_yoctopuce_YoctoAPI_YJniWrapper
 * Method:    usbProcess
 * Signature: (Lcom/yoctopuce/YoctoAPI/YUSBHub;)V
 */
JNIEXPORT void JNICALL Java_com_yoctopuce_YoctoAPI_YJniWrapper_usbProcess
  (JNIEnv *, jclass, jobject);

#ifdef __cplusplus
}
#endif
#endif
